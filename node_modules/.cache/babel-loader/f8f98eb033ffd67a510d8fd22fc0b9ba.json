{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abishek Mahesh\\\\Desktop\\\\Trading-UI-Krypto\\\\src\\\\Components\\\\Trending\\\\Trending.js\";\nimport React, { Component } from 'react';\nimport url from '../../config.json';\nimport axios from 'axios';\nimport { BarChart, Bar, XAxis, YAxis, Cell, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './Trending.css';\nexport class Trending extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allStocksList: [{\n        stockName: 'Reliance Industries Ltd',\n        crisilRating: 10\n      }, {\n        stockName: \"Bajaj Auto Ltd\",\n        crisilRating: 9\n      }, {\n        stockName: \"Dr.Reddy's Laboratories Ltd\",\n        crisilRating: 8\n      }, {\n        stockName: \"Bharat Heavy Electricals Ltd\",\n        crisilRating: 7\n      }, {\n        stockName: \"State Bank Of India\",\n        crisilRating: 6\n      }]\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(url.urlCharan, \"/getTrending\")).then(res => {\n      console.log(\"res inside component did mount get all stocks\", res);\n\n      if (res.status === 200 && res.data.status === \"SUCCESS\") {\n        console.log(\"inside success\");\n        this.setState({\n          allStocksList: res.data.data\n        }, () => {\n          console.log(\"all stock after set state\", this.state.allStocksList);\n        });\n      } else {}\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Trending Stocks\"), React.createElement(\"table\", {\n      className: \"breachtable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"tableheading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Stock Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"CRISIL Rating\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.allStocksList.map((each, index) => React.createElement(\"tr\", {\n      className: \"datarow\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \" \", each.stockName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" \", each.crisilRating))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(BarChart, {\n      width: 600,\n      height: 300,\n      data: this.state.allStocksList,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(XAxis, {\n      dataKey: \"stockName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      dataKey: \"crisilRating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"crisilRating\",\n      stackId: \"a\",\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default Trending;","map":{"version":3,"sources":["C:\\Users\\Abishek Mahesh\\Desktop\\Trading-UI-Krypto\\src\\Components\\Trending\\Trending.js"],"names":["React","Component","url","axios","BarChart","Bar","XAxis","YAxis","Cell","CartesianGrid","Tooltip","Legend","Trending","constructor","props","state","allStocksList","stockName","crisilRating","componentDidMount","get","urlCharan","then","res","console","log","status","data","setState","render","map","each","index","top","right","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,IAAtC,EAA4CC,aAA5C,EAA2DC,OAA3D,EAAoEC,MAApE,QAAkF,UAAlF;AACA,OAAO,gBAAP;AACA,OAAO,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AACpCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,CAAC;AACZC,QAAAA,SAAS,EAAE,yBADC;AAEZC,QAAAA,YAAY,EAAE;AAFF,OAAD,EAIf;AACID,QAAAA,SAAS,EAAE,gBADf;AAEIC,QAAAA,YAAY,EAAE;AAFlB,OAJe,EAQf;AACID,QAAAA,SAAS,EAAE,6BADf;AAEIC,QAAAA,YAAY,EAAE;AAFlB,OARe,EAYf;AACID,QAAAA,SAAS,EAAE,8BADf;AAEIC,QAAAA,YAAY,EAAE;AAFlB,OAZe,EAgBf;AACID,QAAAA,SAAS,EAAE,qBADf;AAEIC,QAAAA,YAAY,EAAE;AAFlB,OAhBe;AADN,KAAb;AAwBH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBhB,IAAAA,KAAK,CAACiB,GAAN,WAAalB,GAAG,CAACmB,SAAjB,mBACKC,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6DF,GAA7D;;AACA,UAAIA,GAAG,CAACG,MAAJ,KAAe,GAAf,IAAsBH,GAAG,CAACI,IAAJ,CAASD,MAAT,KAAoB,SAA9C,EAAyD;AACrDF,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,aAAKG,QAAL,CAAc;AACVZ,UAAAA,aAAa,EAAEO,GAAG,CAACI,IAAJ,CAASA;AADd,SAAd,EAEG,MAAM;AACLH,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyC,KAAKV,KAAL,CAAWC,aAApD;AACH,SAJD;AAKH,OAPD,MAOO,CAEN;AACJ,KAbL;AAcH;;AACDa,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,CADJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKd,KAAL,CAAWC,aAAX,CAAyBc,GAAzB,CAA6B,CAACC,IAAD,EAAOC,KAAP,KACzB;AAAI,MAAA,SAAS,EAAC,SAAd;AAAwB,MAAA,KAAK,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMD,IAAI,CAACd,SAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMc,IAAI,CAACb,YAAX,CAFJ,CADJ,CAFR,CAPJ,CAFJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,EAuBI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,GAAjB;AAAsB,MAAA,MAAM,EAAE,GAA9B;AAAmC,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,aAApD;AACI,MAAA,MAAM,EAAE;AAAEiB,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE,EAAlB;AAAsBC,QAAAA,IAAI,EAAE,EAA5B;AAAgCC,QAAAA,MAAM,EAAE;AAAxC,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,cAAb;AAA4B,MAAA,OAAO,EAAC,GAApC;AAAwC,MAAA,IAAI,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADA,CAvBJ,CADJ;AA0CH;;AAvFmC;AA0FxC,eAAexB,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport url from '../../config.json'\nimport axios from 'axios'\nimport { BarChart, Bar, XAxis, YAxis, Cell, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './Trending.css'\nexport class Trending extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            allStocksList: [{\n                stockName: 'Reliance Industries Ltd',\n                crisilRating: 10\n            },\n            {\n                stockName: \"Bajaj Auto Ltd\",\n                crisilRating: 9\n            },\n            {\n                stockName: \"Dr.Reddy's Laboratories Ltd\",\n                crisilRating: 8\n            },\n            {\n                stockName: \"Bharat Heavy Electricals Ltd\",\n                crisilRating: 7\n            },\n            {\n                stockName: \"State Bank Of India\",\n                crisilRating: 6\n\n            }\n            ]\n        }\n    }\n    componentDidMount() {\n        axios.get(`${url.urlCharan}/getTrending`)\n            .then(res => {\n                console.log(\"res inside component did mount get all stocks\", res)\n                if (res.status === 200 && res.data.status === \"SUCCESS\") {\n                    console.log(\"inside success\")\n                    this.setState({\n                        allStocksList: res.data.data\n                    }, () => {\n                        console.log(\"all stock after set state\", this.state.allStocksList)\n                    });\n                } else {\n\n                }\n            })\n    }\n    render() {\n        return (\n            <div>\n                <h2>Trending Stocks</h2>\n                <table className=\"breachtable\">\n                    <thead className=\"tableheading\">\n                        <tr>\n                            <th scope=\"col\">Stock Name</th>\n                            <th scope=\"col\">CRISIL Rating</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.allStocksList.map((each, index) => (\n                                <tr className=\"datarow\" scope=\"row\">\n                                    <td> {each.stockName}</td>\n                                    <td> {each.crisilRating}</td>\n                                </tr>\n                            ))\n                        }\n\n                    </tbody>\n                </table>\n\n                <br></br>\n                <div className=\"chart\">\n                <BarChart width={600} height={300} data={this.state.allStocksList}\n                    margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n                    <XAxis dataKey=\"stockName\" />\n                    <YAxis dataKey=\"crisilRating\" />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"crisilRating\" stackId=\"a\" fill=\"#8884d8\" />\n                    {/* <Bar dataKey=\"crisilRating\" stackId=\"a\" fill=\"#ffffff\" /> */}\n                   \n                </BarChart>\n                </div>\n                \n\n            </div>\n\n        )\n    }\n}\n\nexport default Trending\n"]},"metadata":{},"sourceType":"module"}