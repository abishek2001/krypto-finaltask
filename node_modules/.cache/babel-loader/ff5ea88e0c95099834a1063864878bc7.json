{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Abishek Mahesh\\\\Desktop\\\\Trading-UI-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abishek Mahesh\\\\Desktop\\\\Trading-UI-master\\\\src\\\\Components\\\\Purchase\\\\Purchase.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './Purchase.css';\nimport axios from 'axios';\nimport url from '../../config.json';\nimport Axios from 'axios';\nimport SweetAlert from 'sweetalert-react';\nexport class Purchase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialState: {\n        stockList: [{\n          name: 'Hero',\n          unitPrice: '1100',\n          stockExchange: 'NSE'\n        }],\n        quantity: '',\n        unitPrice: '',\n        totalPriceObtained: false,\n        totalPrice: '',\n        stockId: '',\n        stockName: '',\n        updatedPrice: ''\n      },\n      allStocksList: [],\n      quantity: '',\n      stockId: '',\n      stockName: '',\n      unitPrice: '100',\n      totalPrice: '',\n      totalPriceObtained: false,\n      quantityError: '',\n      confirmed: false,\n      updatedPrice: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.onStockChange = this.onStockChange.bind(this);\n    this.handleConfirm = this.handleConfirm.bind(this);\n    this.handleOrder = this.handleOrder.bind(this);\n    this.handleOrderCancel = this.handleOrderCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.id]: e.target.value\n    }, () => {// localStorage.setItem(\"data\",this.state.emailId)\n    });\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(url.url, \"/getAllStocks\")).then(res => {\n      console.log(\"res inside component did mount get all stocks\", res);\n\n      if (res.status === 200 && res.data.status === \"SUCCESS\") {\n        console.log(\"inside success\");\n        this.setState({\n          allStocksList: res.data.data\n        }, () => {\n          console.log(\"all stock after set state\", this.state.allStocksList);\n        });\n      } else {}\n    });\n  }\n\n  handleConfirm(e) {\n    e.preventDefault();\n    let stock = {\n      stockId: this.state.stockId,\n      quantity: this.state.quantity\n    };\n    axios.post(\"\".concat(url.url, \"/updatedPrice\"), stock).then(res => {\n      console.log(\"res inside handle confirm\", res);\n\n      if (res.status === 200 && res.data.status === \"SUCCESS\") {\n        console.log(\"inside success\");\n        this.setState({\n          updatedPrice: res.data.totalPrice,\n          confirmed: true\n        }, () => {\n          console.log(\"updated price\", this.state.updatedPrice);\n        });\n      } else {}\n    }).catch(err => {});\n  }\n\n  handleOrderCancel(e) {\n    e.preventDefault();\n    let userId = localStorage.getItem('userId');\n    let stock = {\n      stockId: this.state.stockId,\n      quantity: this.state.quantity,\n      userId: userId,\n      price: this.state.updatedPrice,\n      status: \"CANCEL\",\n      unitPrice: this.state.unitPrice\n    };\n    axios.post(\"\".concat(url.url, \"/order\"), stock).then(res => {\n      console.log(\"res inside handle confirm\", res);\n\n      if (res.status === 200 && res.data.status === \"SUCCESS\") {\n        console.log(\"inside success\");\n        this.setState({\n          orderId: res.data.orderId\n        }, () => {\n          console.log(\"orderid\", this.state.orderId);\n        });\n        alert(\"Order submitted successfully. Order Id: \".concat(this.state.orderId));\n        this.props.history.push('/home');\n      } else {}\n    }).catch(err => {});\n  }\n\n  handleOrder(e) {\n    e.preventDefault();\n    let userId = localStorage.getItem('userId');\n    let stock = {\n      stockId: this.state.stockId,\n      quantity: this.state.quantity,\n      userId: userId,\n      price: this.state.updatedPrice,\n      status: \"SUCCESS\",\n      unitPrice: this.state.unitPrice\n    };\n    axios.post(\"\".concat(url.url, \"/order\"), stock).then(res => {\n      console.log(\"res inside handle confirm\", res);\n\n      if (res.status === 200 && res.data.status === \"SUCCESS\") {\n        console.log(\"inside success\");\n        this.setState({\n          orderId: res.data.orderId\n        }, () => {\n          console.log(\"orderid\", this.state.orderId);\n        });\n        alert(\"Order submission cancelled\");\n        this.props.history.push('/home');\n      } else {}\n    }).catch(err => {});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.validate().then(res => {\n      console.log(\"res\", res);\n      const _this$state = this.state,\n            stockId = _this$state.stockId,\n            unitPrice = _this$state.unitPrice,\n            quantity = _this$state.quantity;\n      let userId = localStorage.getItem('userId');\n      const stock = {\n        stockId: stockId,\n        quantity: parseInt(quantity),\n        unitPrice: unitPrice\n      };\n      console.log(\"validation response\", res);\n\n      if (res) {\n        this.getData(stock).then(response => {\n          console.log(\"response of purchase\", response);\n\n          if (response.status === 200 && response.data.status === \"SUCCESS\") {\n            console.log(\"response of purchase\", response);\n            this.setState({\n              totalPriceObtained: true,\n              totalPrice: response.data.totalPrice\n            });\n          } else {\n            alert(\"Sorry we do not find any movies available on this date\");\n          }\n        });\n      }\n    });\n  }\n\n  onStockChange(e) {\n    this.setState({\n      stockId: this.state.allStocksList[e.target.value - 1].stockId,\n      stockName: this.state.allStocksList[e.target.value - 1].stockName,\n      unitPrice: this.state.allStocksList[e.target.value - 1].unitPrice\n    }, () => {\n      console.log(\"After stock change\", this.state.stockId, this.state.stockName);\n    });\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.setState(() => this.initialState);\n    document.getElementById(\"purchaseform\").reset();\n    console.log(\"state after reset\", this.state);\n  }\n\n  getData(stock) {\n    return new Promise((resolve, reject) => {\n      axios.post(\"\".concat(url.url, \"/totalPrice\"), stock).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  validate() {\n    return new Promise((resolve, reject) => {\n      console.log(\"Inside validate\");\n      let isValid = true;\n      const errors = {\n        quantityError: ''\n      };\n      var UserDate = this.state.date;\n      var ToDate = new Date(); // if (this.state.date && new Date(UserDate).getTime() >= ToDate.getTime()) {\n      //     console.log(\"Date is valid\")\n      // } else {\n      //     isValid = false;\n      //     errors.dateError = \"Please select valid date either today or future date\"\n      // }\n\n      var pattern = new RegExp('^\\\\d*$');\n\n      if (pattern.test(this.state.quantity)) {} else {\n        isValid = false;\n        errors.quantityError = \"Quantity should be a number greater than 0\";\n      }\n\n      if (this.state.stockName === '') {\n        isValid = false;\n        errors.stockNameError = \"Please select a stock from the list and enter quantity\";\n      }\n\n      this.setState(_objectSpread({}, this.state, {}, errors));\n      return resolve(true);\n    });\n  }\n\n  render() {\n    let stockList = this.state.allStocksList.map((item, i) => {\n      console.log(\"item\", item);\n      return React.createElement(\"option\", {\n        key: i,\n        value: item.stockId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, item.stockName);\n    }, this);\n    console.log(\"stock list inside render\", stockList);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"purchaseform\",\n      className: \"purchaseform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"pull-right text-danger \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, this.state.stockNameError)), React.createElement(\"div\", {\n      className: \"form-group col-xs-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"stockName\",\n      style: {\n        \"font-weight\": \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Select the stock\"), React.createElement(\"select\", {\n      className: \"form-control\",\n      id: \"stockName\",\n      onChange: this.onStockChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"select\"), stockList))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"pull-right text-danger \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, this.state.quantityError)), React.createElement(\"label\", {\n      htmlFor: \"quantity\",\n      style: {\n        \"font-weight\": \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Enter the quantity\"), React.createElement(\"input\", {\n      type: \"quantity\",\n      id: \"quantity\",\n      onChange: this.handleChange,\n      value: this.state.quantity,\n      className: \"form-control\",\n      placeholder: \"Enter the quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"unitPrice\",\n      style: {\n        \"font-weight\": \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Unit Price for selected stock\"), React.createElement(\"input\", {\n      type: \"unitPrice\",\n      id: \"unitPrice\",\n      value: this.state.unitPrice,\n      className: \"form-control\",\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), React.createElement(\"h7\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"***Brokerage fee is 10%\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"submitsearch\",\n      type: \"submit\",\n      className: \"but\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Buy\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"\\xA0\\xA0\", React.createElement(\"button\", {\n      id: \"submitcancel\",\n      type: \"submit\",\n      className: \"but\",\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Cancel\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), this.state.totalPriceObtained ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Total Price in INR: \", this.state.totalPrice), React.createElement(\"button\", {\n      id: \"submitconfirm\",\n      type: \"submit\",\n      className: \"but\",\n      onClick: this.handleConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Confirm\"), React.createElement(\"button\", {\n      id: \"submitcancel\",\n      type: \"submit\",\n      className: \"but\",\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Cancel\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), this.state.confirmed ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"Total Price in INR: \", this.state.totalPrice, \" \\xA0 \\xA0 Updated Price in INR: \", this.state.updatedPrice, \" \"), React.createElement(\"button\", {\n      id: \"submitorder\",\n      type: \"submit\",\n      className: \"butgreen\",\n      onClick: this.handleOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Confirm\"), React.createElement(\"button\", {\n      id: \"submitcancel\",\n      type: \"submit\",\n      className: \"but\",\n      onClick: this.handleOrderCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"Cancel\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Purchase;","map":{"version":3,"sources":["C:\\Users\\Abishek Mahesh\\Desktop\\Trading-UI-master\\src\\Components\\Purchase\\Purchase.js"],"names":["React","Component","axios","url","Axios","SweetAlert","Purchase","constructor","props","state","initialState","stockList","name","unitPrice","stockExchange","quantity","totalPriceObtained","totalPrice","stockId","stockName","updatedPrice","allStocksList","quantityError","confirmed","handleChange","bind","handleSubmit","handleCancel","onStockChange","handleConfirm","handleOrder","handleOrderCancel","e","setState","target","id","value","componentDidMount","get","then","res","console","log","status","data","preventDefault","stock","post","catch","err","userId","localStorage","getItem","price","orderId","alert","history","push","validate","parseInt","getData","response","document","getElementById","reset","Promise","resolve","reject","isValid","errors","UserDate","date","ToDate","Date","pattern","RegExp","test","stockNameError","render","map","item","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Purchase.css'\nimport axios from 'axios'\nimport url from '../../config.json'\nimport Axios from 'axios';\nimport SweetAlert from 'sweetalert-react';\nexport class Purchase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            initialState: {\n                stockList: [{\n                    name: 'Hero',\n                    unitPrice: '1100',\n                    stockExchange: 'NSE'\n                }],\n                quantity:'',\n                unitPrice:'',\n                totalPriceObtained: false,\n                totalPrice:'',\n                stockId: '',\n                stockName:'',\n                updatedPrice: ''\n\n            },\n            allStocksList: [],\n            quantity: '',\n            stockId: '',\n            stockName: '',\n            unitPrice: '100',\n            totalPrice: '',\n            totalPriceObtained: false,\n            quantityError: '',\n            confirmed: false,\n            updatedPrice:''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleCancel = this.handleCancel.bind(this);\n        this.onStockChange = this.onStockChange.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n        this.handleOrder = this.handleOrder.bind(this);\n        this.handleOrderCancel = this.handleOrderCancel.bind(this);\n\n    }\n    handleChange(e) {\n        this.setState({ [e.target.id]: e.target.value }, () => {\n            // localStorage.setItem(\"data\",this.state.emailId)\n        });\n\n    }\n    componentDidMount() {\n        axios.get(`${url.url}/getAllStocks`)\n            .then(res => {\n                console.log(\"res inside component did mount get all stocks\", res)\n                if (res.status === 200 && res.data.status === \"SUCCESS\") {\n                    console.log(\"inside success\")\n                    this.setState({\n                        allStocksList: res.data.data\n                    }, () => {\n                        console.log(\"all stock after set state\", this.state.allStocksList)\n                    });\n                } else {\n\n                }\n            })\n    }\n    handleConfirm(e){\n        e.preventDefault()\n        let stock={\n            stockId: this.state.stockId,\n            quantity: this.state.quantity\n        }\n        axios.post(`${url.url}/updatedPrice`,stock )\n                .then(res => {\n                    console.log(\"res inside handle confirm\", res)\n                    if (res.status === 200 && res.data.status === \"SUCCESS\") {\n                        console.log(\"inside success\")\n                        this.setState({\n                            updatedPrice: res.data.totalPrice,\n                            confirmed: true\n                        }, () => {\n                            console.log(\"updated price\", this.state.updatedPrice)\n                        });\n                    } else {\n    \n                    }\n                }).catch(err => {\n                    \n                })\n    }\n    handleOrderCancel(e){\n        e.preventDefault()\n        let userId=localStorage.getItem('userId')\n        let stock={\n            stockId: this.state.stockId,\n            quantity: this.state.quantity,\n            userId: userId,\n            price: this.state.updatedPrice,\n            status: \"CANCEL\",\n            unitPrice: this.state.unitPrice\n        }\n        axios.post(`${url.url}/order`,stock )\n                .then(res => {\n                    console.log(\"res inside handle confirm\", res)\n                    if (res.status === 200 && res.data.status === \"SUCCESS\") {\n                        console.log(\"inside success\")\n                        this.setState({\n                            orderId: res.data.orderId\n                        }, () => {\n                            console.log(\"orderid\", this.state.orderId)\n                        });\n                        alert(`Order submitted successfully. Order Id: ${this.state.orderId}`)\n                        this.props.history.push('/home')\n                    } else {\n    \n                    }\n                }).catch(err => {\n                    \n                })\n    }\n    handleOrder(e){\n        e.preventDefault()\n        let userId=localStorage.getItem('userId')\n        let stock={\n            stockId: this.state.stockId,\n            quantity: this.state.quantity,\n            userId: userId,\n            price: this.state.updatedPrice,\n            status: \"SUCCESS\",\n            unitPrice: this.state.unitPrice\n        }\n        axios.post(`${url.url}/order`,stock )\n                .then(res => {\n                    console.log(\"res inside handle confirm\", res)\n                    if (res.status === 200 && res.data.status === \"SUCCESS\") {\n                        console.log(\"inside success\")\n                        this.setState({\n                            orderId: res.data.orderId\n                        }, () => {\n                            console.log(\"orderid\", this.state.orderId)\n                        });\n                        alert(\"Order submission cancelled\")\n                        this.props.history.push('/home')\n                    } else {\n    \n                    }\n                }).catch(err => {\n                    \n                })\n\n    }\n    handleSubmit(e) {\n        e.preventDefault()\n        this.validate().then((res) => {\n            console.log(\"res\", res)\n            const { stockId, unitPrice, quantity } = this.state\n            let userId = localStorage.getItem('userId')\n            const stock = {\n                stockId: stockId,\n                quantity: parseInt(quantity),\n                unitPrice: unitPrice\n            };\n            console.log(\"validation response\", res)\n            if (res) {\n                this.getData(stock).then((response) => {\n                    console.log(\"response of purchase\", response)\n                    if (response.status === 200 && response.data.status === \"SUCCESS\") {\n                        console.log(\"response of purchase\", response)\n                        this.setState({\n                            totalPriceObtained: true,\n                            totalPrice: response.data.totalPrice\n                        })\n                    } else {\n                        alert(`Sorry we do not find any movies available on this date`);\n                    }\n                })\n            }\n        });\n\n    }\n \n    onStockChange(e) {\n        this.setState({\n            stockId: this.state.allStocksList[e.target.value - 1].stockId,\n            stockName: this.state.allStocksList[e.target.value - 1].stockName,\n            unitPrice: this.state.allStocksList[e.target.value - 1].unitPrice\n        }, () => {\n            console.log(\"After stock change\", this.state.stockId, this.state.stockName)\n        })\n\n    }\n    handleCancel(e) {\n        e.preventDefault();\n        this.setState(() => this.initialState)\n        document.getElementById(\"purchaseform\").reset();\n        console.log(\"state after reset\", this.state)\n    }\n    getData(stock) {\n        return new Promise((resolve, reject) => {\n            axios.post(`${url.url}/totalPrice`, stock)\n                .then(res => {\n                    resolve(res)\n                }).catch(err => {\n                    reject(err)\n                })\n        });\n    }\n    validate() {\n        return new Promise((resolve, reject) => {\n            console.log(\"Inside validate\")\n            let isValid = true;\n            const errors = {\n                quantityError: ''\n            }\n            var UserDate = this.state.date\n            var ToDate = new Date();\n\n            // if (this.state.date && new Date(UserDate).getTime() >= ToDate.getTime()) {\n            //     console.log(\"Date is valid\")\n            // } else {\n            //     isValid = false;\n            //     errors.dateError = \"Please select valid date either today or future date\"\n            // }\n            var pattern = new RegExp('^\\\\d*$');\n            if (pattern.test(this.state.quantity )) {\n\n            } else {\n                isValid=false;\n                errors.quantityError=\"Quantity should be a number greater than 0\"\n            }\n            if(this.state.stockName===''){\n                isValid=false;\n                errors.stockNameError=\"Please select a stock from the list and enter quantity\"\n            } \n            this.setState({\n                ...this.state,\n                ...errors\n            })\n            return resolve(true)\n        })\n\n    }\n    render() {\n\n        let stockList = this.state.allStocksList.map((item, i) => {\n            console.log(\"item\", item)\n            return (\n                <option key={i} value={item.stockId}>{item.stockName}</option>\n            )\n        }, this);\n        console.log(\"stock list inside render\", stockList)\n        return (\n            <div>\n                {/* <header >\n                    <h2> Buy Stocks</h2>\n                </header> */}\n                <form id=\"purchaseform\" className=\"purchaseform\">\n                    <div className=\"form-group\">\n                    <span className=\"pull-right text-danger \" ><small>{this.state.stockNameError}</small></span>\n                        <div className=\"form-group col-xs-3\">\n                            <label htmlFor=\"stockName\" style={{ \"font-weight\": \"bold\" }}>Select the stock</label>\n                            <select\n                                className=\"form-control\"\n                                id=\"stockName\"\n                                onChange={this.onStockChange}\n                            >\n                                <option>select</option>\n                                {stockList}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <span className=\"pull-right text-danger \" ><small>{this.state.quantityError}</small></span>\n                        <label htmlFor=\"quantity\" style={{ \"font-weight\": \"bold\" }}>Enter the quantity</label>\n                        <input\n                            type=\"quantity\"\n                            id=\"quantity\"\n                            onChange={this.handleChange}\n                            value={this.state.quantity}\n                            className=\"form-control\"\n                            placeholder=\"Enter the quantity\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"unitPrice\" style={{ \"font-weight\": \"bold\" }}>Unit Price for selected stock</label>\n                        <input\n                            type=\"unitPrice\"\n                            id=\"unitPrice\"\n                            value={this.state.unitPrice}\n                            className=\"form-control\"\n                            readOnly />\n\n                        <h7 >***Brokerage fee is 10%</h7>\n                    </div>\n                    <span>\n                        <button id=\"submitsearch\" type=\"submit\" className=\"but\" onClick={this.handleSubmit}>Buy</button>\n                    </span>\n                    <span>&nbsp;&nbsp;\n                <button id=\"submitcancel\" type=\"submit\" className=\"but\" onClick={this.handleCancel}>Cancel</button>\n                    </span>\n\n                </form>\n                <br></br>\n                {\n                    this.state.totalPriceObtained ?\n                        (<div>\n                            <span>\n                                <h5>Total Price in INR: {this.state.totalPrice}</h5>\n                                    <button id=\"submitconfirm\" type=\"submit\" className=\"but\" onClick={this.handleConfirm}>Confirm</button>\n                                    <button id=\"submitcancel\" type=\"submit\" className=\"but\" onClick={this.handleCancel}>Cancel</button>\n\n                            </span>\n                        </div>\n                        ) :\n                        (<div></div>)\n                }\n                <br></br>\n                {\n                    this.state.confirmed ?\n                        (<div>\n                            <span>\n                                <h5>Total Price in INR: {this.state.totalPrice} &nbsp; &nbsp; Updated Price in INR: {this.state.updatedPrice} </h5>\n                                <button id=\"submitorder\" type=\"submit\" className=\"butgreen\" onClick={this.handleOrder }>Confirm</button>\n                                <button id=\"submitcancel\" type=\"submit\" className=\"but\" onClick={this.handleOrderCancel}>Cancel</button>\n                            </span>\n                        </div>\n                        ) :\n                        (<div></div>)\n                }\n            </div>\n        )\n    }\n}\n\nexport default Purchase\n"]},"metadata":{},"sourceType":"module"}